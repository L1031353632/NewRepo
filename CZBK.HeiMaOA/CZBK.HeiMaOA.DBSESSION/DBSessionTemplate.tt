<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ 
 output extension=".cs"#><#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\CZBK.HeiMaOA.Model\\Model.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CZBK.HeiMaOA.DAOFACTORY;
using CZBK.HeiMaOA.IDAO;
using CZBK.HeiMaOA.IDBSESSION;

namespace CZBK.HeiMaOA.DBSESSION
{
	public partial class DBSession : IDBSession
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=entity.Name#>DAO _<#=entity.Name#>DAO;
        public I<#=entity.Name#>DAO <#=entity.Name#>DAO
        {
            get
            {
                if(_<#=entity.Name#>DAO == null)
                {
                    _<#=entity.Name#>DAO = DAOAbstractFactory.Create<#=entity.Name#>DAO();
                }
                return _<#=entity.Name#>DAO;
            }
            set { _<#=entity.Name#>DAO = value; }
        }
<#}#>
	}	
}